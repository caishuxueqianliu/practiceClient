{"remainingRequest":"/Users/admin/Desktop/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/client/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/client/src/views/Home.vue","mtime":1597058753872},{"path":"/Users/admin/Desktop/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQge3JlcUdldCxyZXFQb3N0LHJlcUdldFVzZXJzLHJlcVBvc3RVc2Vyc30gZnJvbSAnLi4vYXBpJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIb21lJywKICBkYXRhKCl7CiAgcmV0dXJuewogICAgIGR0OicnLAogICAgIGR0dDp7dXNlcm5hbWU6J2xpdWhhbycscGFzc3dvcmQ6J2xpdWhhbyd9LAogICAgIGR0MTonJywKICAgICBkdDI6JycsCiAgICAgZHQzOicnLAogICAgIGR0NDonJwogIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgCiAgfSwKICAgY3JlYXRlZCgpewogCiAgICB9LAogICBtb3VudGVkKCl7CgogICAvLyB0aGlzLmdldFJlcSgpOwogIC8vIHRoaXMucG9zdFJlcSgpOwogIHRoaXMuZ2V0UmVxVXNlcnMoKTsKICAgIHRoaXMucG9zdFJlcVVzZXJzKCk7IAogdGhpcy53c0RhdGUoKTsKICAgIH0sCiAgICBtZXRob2RzOnsKICAgIGdldFJlcSgpewogICAgICAgcmVxR2V0KCkudGhlbigocmVzKT0+ewogICAgICAgICAgIHRoaXMuZHQxPXJlcy5kYXRhLm1zZzsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhLm1zZykKICAgICAgIH0pCgogICAgfSwKICAgIGdldFJlcVVzZXJzKCl7CiAgICAgICByZXFHZXRVc2VycygpLnRoZW4oKHJlcyk9PnsKICAgICAgICAgICB0aGlzLmR0Mz1yZXMuZGF0YS5kYXRhLnVzZXJuYW1lOwogICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEubXNnKQogICAgICAgfSkKCiAgICB9LAogICAgcG9zdFJlcVVzZXJzKCl7CiAgICAgICByZXFQb3N0VXNlcnModGhpcy5kdHQpLnRoZW4oKHJlcyk9PnsKICAgICAgICAgICB0aGlzLmR0ND1yZXMuZGF0YS5kYXRhLnVzZXJuYW1lOwogICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEubXNnKQogICAgICAgfSkKCiAgICB9LAogICAgYXN5bmMgcG9zdFJlcSgpewogICAgICBjb25zdCBkYXRhPSBhd2FpdCByZXFQb3N0KCk7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEpCiAgICAgIC8vdGhpcy5kdDI9ZGF0YS5kYXRhLm1zZy52YWx1ZXMuYQoKICAgIH0sCiAgICB3c0RhdGUoKXsKIGNvbnN0IHdzID0gbmV3IFdlYlNvY2tldCgid3M6Ly8xMjcuMC4wLjE6MzAwMC93ZWJzb2NrZXQvdHQiKTsKICAgLy8gY29uc29sZS5sb2coJ3dz6L+e5o6l54q25oCB77yaJyArIHdzLnJlYWR5U3RhdGUpOwogICAgLy/nm5HlkKzmmK/lkKbov57mjqXmiJDlip8KICAgIHdzLm9ub3BlbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5sb2coJ3dz6L+e5o6l54q25oCB77yaJyArIHdzLnJlYWR5U3RhdGUpOwogICAgICAgIC8v6L+e5o6l5oiQ5Yqf5YiZ5Y+R6YCB5LiA5Liq5pWw5o2uCiAgICAgIC8vIHdzLnNlbmQoJ3Rlc3QxJyk7CiAgICB9CiAgICAvL+aOpeWQrOacjeWKoeWZqOWPkeWbnueahOS/oeaBr+W5tuWkhOeQhuWxleekugogICAgd3Mub25tZXNzYWdlID0gKGRhdGEpPT4gewogICAgIC8vICAgY29uc29sZS5sb2coJ+aOpeaUtuWIsOadpeiHquacjeWKoeWZqOeahOa2iOaBr++8micpOwogICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEpOwogICAgICAgIHRoaXMuZHQ9ZGF0YS5kYXRhOwogICAgICAgIC8v5a6M5oiQ6YCa5L+h5ZCO5YWz6ZetV2ViU29ja2V06L+e5o6lCiAgICAgICAvLyB3cy5jbG9zZSgpOwogICAgfQogICAgLy/nm5HlkKzov57mjqXlhbPpl63kuovku7YKICAgIHdzLm9uY2xvc2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy/nm5HlkKzmlbTkuKrov4fnqIvkuK13ZWJzb2NrZXTnmoTnirbmgIEKICAgICAgICBjb25zb2xlLmxvZygnd3Pov57mjqXnirbmgIHvvJonICsgd3MucmVhZHlTdGF0ZSk7CiAgICB9CiAgICAvL+ebkeWQrOW5tuWkhOeQhmVycm9y5LqL5Lu2CiAgICB3cy5vbmVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgfQogICAgfQogICAgfSwKICAgIHdhdGNoOnsKICAgICAgIH0sCiAgICBjb21wdXRlZDp7CiAgICB9Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n   <b>ws=============:{{dt}}</b><br>\n<b>get=============:{{dt1}}</b><br>\n<b>post============:{{dt2}}</b><br>\n<b>getusers============:{{dt3}}</b><br>\n<b>postusers============:{{dt4}}</b><br>\n  </div>\n\n</template>\n\n<script>\n// @ is an alias to /src\nimport {reqGet,reqPost,reqGetUsers,reqPostUsers} from '../api'\n\nexport default {\n  name: 'Home',\n  data(){\n  return{\n     dt:'',\n     dtt:{username:'liuhao',password:'liuhao'},\n     dt1:'',\n     dt2:'',\n     dt3:'',\n     dt4:''\n  }\n  },\n  components: {\n   \n  },\n   created(){\n \n    },\n   mounted(){\n\n   // this.getReq();\n  // this.postReq();\n  this.getReqUsers();\n    this.postReqUsers(); \n this.wsDate();\n    },\n    methods:{\n    getReq(){\n       reqGet().then((res)=>{\n           this.dt1=res.data.msg;\n          // console.log(res.data.msg)\n       })\n\n    },\n    getReqUsers(){\n       reqGetUsers().then((res)=>{\n           this.dt3=res.data.data.username;\n          // console.log(res.data.msg)\n       })\n\n    },\n    postReqUsers(){\n       reqPostUsers(this.dtt).then((res)=>{\n           this.dt4=res.data.data.username;\n          // console.log(res.data.msg)\n       })\n\n    },\n    async postReq(){\n      const data= await reqPost();\n      console.log(data)\n      //this.dt2=data.data.msg.values.a\n\n    },\n    wsDate(){\n const ws = new WebSocket(\"ws://127.0.0.1:3000/websocket/tt\");\n   // console.log('ws连接状态：' + ws.readyState);\n    //监听是否连接成功\n    ws.onopen = function () {\n      console.log('ws连接状态：' + ws.readyState);\n        //连接成功则发送一个数据\n      // ws.send('test1');\n    }\n    //接听服务器发回的信息并处理展示\n    ws.onmessage = (data)=> {\n     //   console.log('接收到来自服务器的消息：');\n      console.log(data.data);\n        this.dt=data.data;\n        //完成通信后关闭WebSocket连接\n       // ws.close();\n    }\n    //监听连接关闭事件\n    ws.onclose = function () {\n        //监听整个过程中websocket的状态\n        console.log('ws连接状态：' + ws.readyState);\n    }\n    //监听并处理error事件\n    ws.onerror = function (error) {\n        console.log(error);\n    }\n    }\n    },\n    watch:{\n       },\n    computed:{\n    }\n}\n</script>\n"]}]}